@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalDoctorsCount /
        Model.DoctorsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Doctor"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Specialty"
           asp-route-searchTerm="@Model.SearchTerm"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Doctors.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Doctor"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Specialty"
           asp-route-searchTerm="@Model.SearchTerm">>></a>
    </div>
</div>

@if (!Model.Doctors.Any())
{
    <h2 class="text-center">No houses found by the given criteria!</h2>
}

<div class="row">
    @foreach (var house in Model.Doctors)
    {
        <partial name="_DoctorPartial" model="@house" />
    }
</div>